import { pick } from '@antv/util';
import { Plot } from '../../core/plot';
import { DEFAULT_OPTIONS } from './constants';
import { PathLayer } from '../../layers/path-layer';
import { LayerGroup } from '../../core/layer/layer-group';
export class Path extends Plot {
    constructor() {
        super(...arguments);
        /**
         * 图表类型
         */
        this.type = Plot.PlotType.Path;
    }
    /**
     * 获取默认配置
     */
    getDefaultOptions() {
        return Path.DefaultOptions;
    }
    /**
     * 创建图层
     */
    createLayers(source) {
        this.pathLayer = new PathLayer(Object.assign({ source }, pick(this.options, PathLayer.LayerOptionsKeys)));
        const layerGroup = new LayerGroup([this.pathLayer]);
        return layerGroup;
    }
    /**
     * 更新图层
     */
    updateLayers(options) {
        const dotLayerConfig = pick(options, PathLayer.LayerOptionsKeys);
        this.pathLayer.update(dotLayerConfig);
    }
    /**
     * 实现 legend 配置项
     */
    getLegendOptions() {
        const colorLegendItems = this.pathLayer.getColorLegendItems();
        if (colorLegendItems.length !== 0) {
            return { type: 'category', items: colorLegendItems };
        }
        return {};
    }
}
/**
 * 默认配置项
 */
Path.DefaultOptions = DEFAULT_OPTIONS;
//# sourceMappingURL=index.js.map