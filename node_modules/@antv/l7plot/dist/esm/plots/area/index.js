import { pick } from '@antv/util';
import { Plot } from '../../core/plot';
import { DEFAULT_OPTIONS } from './constants';
import { AreaLayer } from '../../layers/area-layer';
import { LayerGroup } from '../../core/layer/layer-group';
export class Area extends Plot {
    constructor() {
        super(...arguments);
        /**
         * 图表类型
         */
        this.type = Plot.PlotType.Area;
    }
    /**
     * 获取默认配置
     */
    getDefaultOptions() {
        return Area.DefaultOptions;
    }
    /**
     * 创建图层
     */
    createLayers(source) {
        this.areaLayer = new AreaLayer(Object.assign({ source }, pick(this.options, AreaLayer.LayerOptionsKeys)));
        const layerGroup = new LayerGroup([this.areaLayer]);
        if (this.options.label) {
            this.labelLayer = this.createLabelLayer(source, this.options.label, this.options);
            layerGroup.addLayer(this.labelLayer);
        }
        return layerGroup;
    }
    /**
     * 更新图层
     */
    updateLayers(options) {
        const polygonLayerConfig = pick(options, AreaLayer.LayerOptionsKeys);
        this.areaLayer.update(polygonLayerConfig);
        this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);
    }
    /**
     * 初始化图层事件
     */
    initLayersEvent() {
        //
    }
    /**
     * 实现 legend 配置项
     */
    getLegendOptions() {
        const colorLegendItems = this.areaLayer.getColorLegendItems();
        if (colorLegendItems.length !== 0) {
            return { type: 'category', items: colorLegendItems };
        }
        return {};
    }
}
/**
 * 默认配置项
 */
Area.DefaultOptions = DEFAULT_OPTIONS;
//# sourceMappingURL=index.js.map